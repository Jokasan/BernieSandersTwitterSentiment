install.packages("shinydashboard")
install.packages("shinydashboardPlus")
remotes::install_github("Appsilon/shiny.react")
remotes::install_github("Appsilon/shiny.fluent")
shiny.fluent::runExample("demo")
library(shiny)
shiny.fluent::runExample("demo")
shiny.fluent::runExample("dashboard")
install.packages("shiny.router")
shiny.fluent::runExample("dashboard")
install.packages("semantic.dashboard")
setwd("~/Documents/R/Demos/Tweet_Sentiment")
pacman::p_load(twitteR,ROAuth,tidyverse,tm,SnowballC,topicmodels,sentiment,data.table,syuzhet,plotly)
install.packages("rmdformats")
library(rmdformats)
?setup_twitter_oath()
??setup_twitter_oath()
consumer_key <- 'UnUKsCQPgvvMTl49lm4hBmx1Z'
consumer_secret <- 'CMTXmY2efhdQrfnhxCPUfpCehTjb8EsRNDnKQc8KcIqWAgsxZT'
access_token <- '1352906495755755523-G8Wn6VFHIuBaA3kuTXTBA2q7d0and6'
access_secret <- 'CoV8VgvGUrTsz4O8czrrp1LCImLOyMo6X9rqBNOXlA5rT'
setup_twitter_oauth(consumer_key, consumer_secret, access_token,
access_secret)
# step 0: download tweets from Twitter
# if you have not registered a Twitter developer account yet, skip to Step 1 to use the pre-downloaded tweets
library(twitteR)
library(ROAuth)
setup_twitter_oauth(consumer_key, consumer_secret, access_token,
access_secret)
# twitter_user is the twitter ID you want to process
# 3200 is the maximum number of tweets Twitter allows to retrieve (for free)
# we set to first download 500 tweets
twitter_user <- 'BernieSanders'
twitter_max <- 3000
# userTimeline download the timeline (tweets) from? twitter_user
# you can determine whether include retweets and replied tweets by parameters
# userTimeline(user, n=20, maxID=NULL, sinceID=NULL, includeRts=FALSE, excludeReplies=FALSE, ...)
# see the help document for the details of those parameters
tweets <- userTimeline(twitter_user, n = twitter_max, includeRts=FALSE) #excluse retweets
(n.tweet <- length(tweets))
twitter_max <- 10000
# userTimeline download the timeline (tweets) from? twitter_user
# you can determine whether include retweets and replied tweets by parameters
# userTimeline(user, n=20, maxID=NULL, sinceID=NULL, includeRts=FALSE, excludeReplies=FALSE, ...)
# see the help document for the details of those parameters
tweets <- userTimeline(twitter_user, n = twitter_max, includeRts=FALSE) #excluse retweets
(n.tweet <- length(tweets))
twitter_max <- 583
# userTimeline download the timeline (tweets) from? twitter_user
# you can determine whether include retweets and replied tweets by parameters
# userTimeline(user, n=20, maxID=NULL, sinceID=NULL, includeRts=FALSE, excludeReplies=FALSE, ...)
# see the help document for the details of those parameters
tweets <- userTimeline(twitter_user, n = twitter_max, includeRts=FALSE) #excluse retweets
(n.tweet <- length(tweets))
twitter_max <- 600
# userTimeline download the timeline (tweets) from? twitter_user
# you can determine whether include retweets and replied tweets by parameters
# userTimeline(user, n=20, maxID=NULL, sinceID=NULL, includeRts=FALSE, excludeReplies=FALSE, ...)
# see the help document for the details of those parameters
tweets <- userTimeline(twitter_user, n = twitter_max, includeRts=FALSE) #excluse retweets
(n.tweet <- length(tweets))
# convert tweets to a data frame
tweets.df <- twListToDF(tweets)
View(tweets)
View(tweets.df)
twitter_max <- 1000
# userTimeline download the timeline (tweets) from? twitter_user
# you can determine whether include retweets and replied tweets by parameters
# userTimeline(user, n=20, maxID=NULL, sinceID=NULL, includeRts=FALSE, excludeReplies=FALSE, ...)
# see the help document for the details of those parameters
tweets <- userTimeline(twitter_user, n = twitter_max, includeRts=FALSE) #excluse retweets
(n.tweet <- length(tweets))
(n.tweet <- length(tweets))
length(tweets)
pacman::p_load(twitteR,ROAuth,tidyverse,tm,SnowballC,topicmodels,sentiment,data.table,syuzhet,plotly)
# save the downloaded tweets into a csv for future use
file_name = "Bernie_tweets.csv"
tweets.df <- twListToDF(tweets)
# save the downloaded tweets into a csv for future use
file_name = "ExtinctionR_tweets.csv"
write.csv(tweets.df, file = file_name)
# save the downloaded tweets into a csv for future use
file_name = "Bernie_tweets.csv"
write.csv(tweets.df, file = file_name)
